# This is a modified version of the Nightscout Project's own Docker Compose file
# https://github.com/nightscout/cgm-remote-monitor/blob/master/docker-compose.yml
# traefik has been removed because this project uses Caddy and Caddy Docker Proxy

version: '3.7'

services:
  caddy:
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    ports:
      - 80:80
      - 443:443
    environment:
      - CADDY_INGRESS_NETWORKS=caddy
    networks:
      - caddy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - caddy_data:/data
    restart: unless-stopped

  mongo:
    image: ${MONGO_IMAGE}:${MONGO_IMAGE_TAG}
    networks:
      - caddy
    volumes:
      - /nightscout_data/mongo:/data/db:cached
    restart: unless-stopped

  nightscout:
    image: mountrcg/cgm-remote-monitor:dev
    networks:
      - caddy
    labels:
      caddy: ${NS_DOMAIN}
      caddy.reverse_proxy: "{{upstreams 1337}}"
    container_name: nightscout
    restart: always
    depends_on:
      - mongo
    # labels:
    #   - 'traefik.enable=true'
    #   # Change the below Host from `localhost` to be the web address where Nightscout is running.
    #   # Also change the email address in the `traefik` service below.
    #   - 'traefik.http.routers.nightscout.rule=Host(`localhost`)'
    #   - 'traefik.http.routers.nightscout.entrypoints=websecure'
    #   - 'traefik.http.routers.nightscout.tls.certresolver=le'
    environment:
      ### Variables for the container
      NODE_ENV: production
      TZ: Etc/UTC

      ### Overridden variables for Docker Compose setup
      # The `nightscout` service can use HTTP, because we use `traefik` to serve the HTTPS
      # and manage TLS certificates
      INSECURE_USE_HTTP: 'true'

      # For all other settings, please refer to the Environment section of the README
      ### Required variables
      # MONGO_CONNECTION - The connection string for your Mongo database.
      # Something like mongodb://sally:sallypass@ds099999.mongolab.com:99999/nightscout
      # The default connects to the `mongo` included in this docker-compose file.
      # If you change it, you probably also want to comment out the entire `mongo` service block
      # and `depends_on` block above.
      MONGO_CONNECTION: mongodb://mongo:27017/nightscout

      # API_SECRET - A secret passphrase that must be at least 12 characters long.
      API_SECRET: ${NS_API_KEY}

      ### Features
      # ENABLE - Used to enable optional features, expects a space delimited list, such as: careportal rawbg iob
      # See https://github.com/nightscout/cgm-remote-monitor#plugins for details
      ENABLE: ${NS_FEATURES}

      # AUTH_DEFAULT_ROLES (readable) - possible values readable, denied, or any valid role name.
      # When readable, anyone can view Nightscout without a token. Setting it to denied will require
      # a token from every visit, using status-only will enable api-secret based login.
      AUTH_DEFAULT_ROLES: denied

      SHOW_PLUGINS: iob basal sage careportal boluscalc bwp openaps cage dbsize bolus pump

      BASAL_RENDER: icicle
      SCALE_Y: log-dynamic
      SHOW_FORECAST: openaps
      SHOW_RAWBG: noise
      THEME: color
      TIME_FORMAT: 24
      NIGHT_MODE: off

      BG_HIGH: 180
      BG_LOW: 64
      BG_TARGET_BOTTOM: 70
      BG_TARGET_TOP: 140

      BOLUS_RENDER_FORMAT: concise
      BOLUS_RENDER_FORMAT_SMALL: hidden
      BOLUS_RENDER_OVER: 0.5

      BRIDGE_PASSWORD: kugel4me
      BRIDGE_SERVER: EU
      BRIDGE_USER_NAME: mountrcg

      CUSTOM_TITLE: Robs T1D data

      DEVICESTATUS_ADVANCED: true
      DISABLE: delta treatmentnotify
      DISPLAY_UNITS: mg/dl

      OPENAPS_FIELDS: status-label iob

      SAGE_ENABLE_ALERTS: true
      SAGE_INFO: 480
      SAGE_WARN: 570

      # For all other settings, please refer to the Environment section of the README
      # https://github.com/nightscout/cgm-remote-monitor#environment

networks:
  caddy:
    external: true

volumes:
  caddy_data: {}
